!function(){"use strict";var e={profileEditorPopup:document.querySelector(".popup_edit"),openProfilePopupButton:document.querySelector(".profile__edit-button"),clickOnTheFormButton:document.querySelector(".popup_edit").querySelector(".form"),formEditProfile:document.querySelector(".form"),nameInput:document.querySelector(".form__input_type_name"),jobInput:document.querySelector(".form__input_type_job"),titleProfile:document.querySelector(".profile__title"),textProfile:document.querySelector(".profile__text"),templateElement:document.querySelector(".element-template").content,insertElementAfter:document.querySelector(".element"),newPlacePopup:document.querySelector(".popup_add-photo"),formAddFoto:document.querySelector(".popup_add-photo").querySelector(".form"),formProfileEdit:document.querySelector(".popup_edit").querySelector(".form"),avatarEditingButton:document.querySelector(".profile__image-button"),placeNameInput:document.querySelector(".form__input_type_title"),linkInput:document.querySelector(".form__input_type_link"),addPlaceButton:document.querySelector(".profile__add-button"),closepopupAdd:document.querySelector(".popup_add-photo").querySelector(".popup__close-button"),formSaveButton:document.querySelector(".popup_add-photo").querySelector(".form").querySelector(".form__save-button"),likeTemplateButton:document.querySelector(".element-template"),likebutton:document.querySelector(".element__like-button"),previewImagePopup:document.querySelector(".popup-open-photo"),previewImagePopupPicture:document.querySelector(".popup-open-photo__image"),previewImagePopupCaption:document.querySelector(".popup-open-photo__caption")},t={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disable",inputErrorClass:"form__input_type_error",errorClass:"popup__error_visible",errorEmptyInputMessage:"Вы пропустили это поле.",errorEmptyUrlMessage:"Введите адрес сайта.",inputUrlClass:"form__input_type_link"},n=(document.querySelector(".popup_edit"),document.querySelector(".popup_add-photo"),document.querySelector(".popup_type_confirm-delete")),r=document.querySelector(".popup_type_update-avatar");function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n,r,o){var i=t.name,u=t.link,a=t.owner,s=t._id,c=t.likes,l=n.openPreviewImage,p=n.handleCardDislike,f=n.handleCardLike,h=n.handleDeleteCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=i,this._image=u,this._userId=o,this._owner=a._id,this._template=document.querySelector(r),this._likeButton=".element__like-button",this._imageElement=".element__image",this._cardDelete=".element__delete-button",this._cardTitle=".element__group-title",this._likes=c,this._handleCardLike=f,this._handleCardDislike=p,this._element=this._getTempalte(),this._idElement=s,this._openPreviewImage=l,this._openPopupConfirmDelete=h,this._cardElement=this._element.querySelector(this._imageElement),this._cardLikeElement=this._element.querySelector(this._likeButton)}var t,n;return t=e,(n=[{key:"_getTempalte",value:function(){return this._template.content.children[0].cloneNode(!0)}},{key:"_setCardListeners",value:function(){var e=this;this._cardElement.addEventListener("click",(function(){return e._openPreviewImage(e._name,e._image)})),this._cardLikeElement.addEventListener("click",(function(){e._element.querySelector(e._likeButton).classList.contains("element__like-button_active")?e._removelike():e._addlike()})),this._element.querySelector(this._cardDelete).addEventListener("click",(function(){return e._deleteCard()}))}},{key:"generateCard",value:function(){var e=this;return this._setCardListeners(),this.updateLikesCounter(),this._cardElement.src=this._image,this._cardElement.alt=this._name,this._element.querySelector(this._cardTitle).textContent=this._name,this._userId!==this._owner&&this._element.querySelector(this._cardDelete).classList.add("element__delete-button_invisible"),this._likes.forEach((function(t){t._id!==e._userId||e._element.querySelector(e._likeButton).classList.toggle("element__like-button_active")})),this._element}},{key:"updateLikesCounter",value:function(){this._element.querySelector(".element__like-counter").textContent=this._likes.length}},{key:"_addlike",value:function(){this._handleCardLike(this._idElement),this._element.querySelector(this._likeButton).classList.toggle("element__like-button_active")}},{key:"_removelike",value:function(){this._handleCardDislike(this._idElement),this._element.querySelector(this._likeButton).classList.toggle("element__like-button_active")}},{key:"_deleteCard",value:function(){this._openPopupConfirmDelete(this._idElement,this._element)}}])&&o(t.prototype,n),e}();function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._inputList=Array.from(this._form.querySelectorAll(t.inputSelector)),this._buttonElement=this._form.querySelector(t.submitButtonSelector),this._inactiveButtonClass=t.inactiveButtonClass,this._errorClass=t.errorClass,this._inputErrorClass=t.inputErrorClass,this._errorEmptyInputMessage=t.errorEmptyInputMessage,this._errorEmptyUrlMessage=t.errorEmptyUrlMessage,this._inputUrlClass=t.inputUrlClass}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));this._setDefaultError(e),e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){this._form.querySelector("#".concat(e.id,"-error")).classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._toggleButtonState(),e._isValid(t)}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"clearValidationInput",value:function(){var e=this;this._inputList.forEach((function(t){return e._hideInputError(t)})),this._toggleButtonState()}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.setAttribute("disabled",!0),this._buttonElement.classList.add(this._inactiveButtonClass)):(this._buttonElement.removeAttribute("disabled"),this._buttonElement.classList.remove(this._inactiveButtonClass))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_setDefaultError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.contains(this._inputUrlClass)?t.textContent=this._errorEmptyUrlMessage:!e.value.length<=0?t.textContent=e.validationMessage:t.textContent=this._errorEmptyInputMessage}}])&&u(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var c=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(n),this._renderer=r}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e,t){this._container[t](e)}}])&&s(t.prototype,n),e}();function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var p=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close(o._popup)},(n="_closePopupPressEsc")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=t}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._closePopupPressEsc)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._closePopupPressEsc)}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){t.target.classList.contains("popup_opened")&&e.close(e._popup),t.target.classList.contains("popup__close-button")&&e.close(e._popup)}))}}])&&l(t.prototype,n),e}();function f(e){return(f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return(_="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=y(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function d(e,t){return(d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function m(e,t){return!t||"object"!==f(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function y(e){return(y=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&d(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=y(r);if(o){var n=y(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return m(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._photo=t._popup.querySelector(".popup-open-photo__image"),t._title=t._popup.querySelector(".popup-open-photo__caption"),t}return t=u,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;this._photo.src=n,this._photo.alt=t,this._title.textContent=t,_(y(u.prototype),"open",this).call(this)}}])&&h(t.prototype,n),u}(p);function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function g(e,t,n){return(g="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function S(e,t){return(S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function E(e,t){return!t||"object"!==b(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function w(e){return(w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var C=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function u(e,t){var n,r=t.handlerSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._submitForm=r,n._form=n._popup.querySelector(".form"),n}return t=u,(n=[{key:"changeSaveButtonStatus",value:function(){var e=this,t=this._popup.querySelector(".form__save-button");if(t){var n=t.textContent;this._popup.querySelector(".form__save-button").textContent="Сохранение...",setTimeout((function(){e._popup.querySelector(".form__save-button").textContent=n,e._submitForm(e._getInputValues())}),2e3)}}},{key:"_getInputValues",value:function(){var e=this;return this._values={},this._inputs=this._form.querySelectorAll(".form__input"),this._inputs.forEach((function(t){return e._values[t.name]=t.value})),this._values.avatar&&(this._values.link=this._values.avatar),this._values}},{key:"setEventListeners",value:function(){var e=this;g(w(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e.changeSaveButtonStatus()}))}},{key:"close",value:function(){g(w(u.prototype),"close",this).call(this),this._form.reset()}}])&&k(t.prototype,n),u}(p);function P(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t,this._about=n,this._avatar=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,id:this._id,avatar:this._avatar}}},{key:"setUserInfo",value:function(e,t,n){e&&(this._name.textContent=e),t&&(this._about.textContent=t),n&&(this._id=n)}},{key:"setUserAvatar",value:function(e){e&&(this._avatar.src=e)}},{key:"getUserId",value:function(){return this._id}}])&&P(t.prototype,n),e}();function L(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t){var n=t.address,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._address=n,this._headers=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return fetch("".concat(this._address,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._address,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"editUserData",value:function(e,t){return fetch("".concat(this._address,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}},{key:"addCard",value:function(e,t){return fetch("".concat(this._address,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}},{key:"cardDelete",value:function(e){return fetch("".concat(this._address,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"setLike",value:function(e){return fetch("".concat(this._address,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._address,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"updateAvatar",value:function(e){return console.log(e),fetch("".concat(this._address,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}},{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}}])&&L(t.prototype,n),e}();function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function R(e,t,n){return(R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=D(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function B(e,t){return(B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function T(e,t){return!t||"object"!==I(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function D(e){return(D=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var x=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=D(r);if(o){var n=D(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function u(e,t){var n,r=t.submitHandler;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._submitHandler=r,n}return t=u,(n=[{key:"open",value:function(e,t){R(D(u.prototype),"open",this).call(this),this._cardId=e,this.cardElement=t}},{key:"changeDeleteButtonStatus",value:function(){var e=this,t=this._popup.querySelector(".form__save-button_type_confirm-delete");if(t){var n=t.textContent;this._popup.querySelector(".form__save-button_type_confirm-delete").textContent="Удаление...",setTimeout((function(){e._popup.querySelector(".form__save-button_type_confirm-delete").textContent=n}),2e3)}}},{key:"setEventListeners",value:function(){var e=this;R(D(u.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e.changeDeleteButtonStatus(),e._submitHandler(e._cardId)}))}}])&&j(t.prototype,n),u}(p),U=new a(t,e.formProfileEdit);U.enableValidation();var A=new a(t,e.formAddFoto);A.enableValidation();var V=new a(t,r);V.enableValidation();var M=new q(document.querySelector(".profile__title"),document.querySelector(".profile__text"),document.querySelector(".profile__avatar")),H=new v(e.previewImagePopup),F=new C(e.profileEditorPopup,{handlerSubmit:function(e){Q.editUserData(e.name,e.job).then((function(e){M.setUserInfo(e.name,e.about),F.close()})).catch((function(e){console.log(e)}))}}),N=new C(e.newPlacePopup,{handlerSubmit:function(e){Q.addCard(e.title,e.link).then((function(e){var t=K(e);G.addItem(t,"prepend")})).catch((function(e){console.log(e)})),N.close()}}),J=new C(r,{handlerSubmit:function(e){var t=e.link;Q.updateAvatar(t).then((function(e){var t=e.avatar;M.setUserAvatar(t),J.close()})).catch((function(e){console.log(e)}))}}),z=new x(n,{submitHandler:function(e){Q.cardDelete(e).then((function(e){z.cardElement.remove(),z.close()})).catch((function(e){console.log(e)}))}}),G=new c({renderer:function(e){var t=K(e);G.addItem(t,"append")}},".element");function K(e){var t=M.getUserId(),n=new i(e,{openPreviewImage:function(e,t){H.open({name:e,link:t})},handleDeleteCard:function(e,t){z.open(e,t)},handleCardLike:function(e){Q.setLike(e).then((function(e){var t=e.likes;n._likes=t,n.updateLikesCounter()})).catch((function(e){console.log(e)}))},handleCardDislike:function(e){Q.removeLike(e).then((function(e){var t=e.likes;n._likes=t,n.updateLikesCounter()})).catch((function(e){console.log(e)}))}},".element-template",t);return n.generateCard()}var Q=new O({address:"https://mesto.nomoreparties.co/v1/cohort-26",headers:{authorization:"d7ba4792-c046-407e-bd03-0f3f72508d52","Content-Type":"application/json"}});Promise.all([Q.getUserInfo().then((function(e){M.setUserInfo(e.name,e.about,e._id),M.setUserAvatar(e.avatar)})).catch((function(e){console.log(e)})),Q.getInitialCards().then((function(e){G.renderer(e)})).catch((function(e){console.log(e)}))]).catch((function(e){return console.log(e)})),e.openProfilePopupButton.addEventListener("click",(function(){var t=M.getUserInfo();e.nameInput.value=t.name,e.jobInput.value=t.about,U.clearValidationInput(),F.open()})),e.addPlaceButton.addEventListener("click",(function(){A.clearValidationInput(),N.open()})),e.avatarEditingButton.addEventListener("click",(function(){V.clearValidationInput(),J.open()})),F.setEventListeners(),N.setEventListeners(),H.setEventListeners(),z.setEventListeners(),J.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,