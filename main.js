!function(){"use strict";var e={profileEditorPopup:document.querySelector(".popup_edit"),openProfilePopupButton:document.querySelector(".profile__edit-button"),clickOnTheFormButton:document.querySelector(".popup_edit").querySelector(".form"),formEditProfile:document.querySelector(".form"),nameInput:document.querySelector(".form__input_type_name"),jobInput:document.querySelector(".form__input_type_job"),titleProfile:document.querySelector(".profile__title"),textProfile:document.querySelector(".profile__text"),templateElement:document.querySelector(".element-template").content,insertElementAfter:document.querySelector(".element"),newPlacePopup:document.querySelector(".popup_add-photo"),formAddFoto:document.querySelector(".popup_add-photo").querySelector(".form"),formProfileEdit:document.querySelector(".popup_edit").querySelector(".form"),avatarEditingButton:document.querySelector(".profile__image-button"),placeNameInput:document.querySelector(".form__input_type_title"),linkInput:document.querySelector(".form__input_type_link"),addPlaceButton:document.querySelector(".profile__add-button"),closepopupAdd:document.querySelector(".popup_add-photo").querySelector(".popup__close-button"),formSaveButton:document.querySelector(".popup_add-photo").querySelector(".form").querySelector(".form__save-button"),likeTemplateButton:document.querySelector(".element-template"),likebutton:document.querySelector(".element__like-button"),previewImagePopup:document.querySelector(".popup-open-photo"),previewImagePopupPicture:document.querySelector(".popup-open-photo__image"),previewImagePopupCaption:document.querySelector(".popup-open-photo__caption")},t={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"form__save-button_disable",inputErrorClass:"form__input_type_error",errorClass:"popup__error_visible",errorEmptyInputMessage:"Вы пропустили это поле.",errorEmptyUrlMessage:"Введите адрес сайта.",inputUrlClass:"form__input_type_link"},n=(document.querySelector(".popup_edit"),document.querySelector(".popup_add-photo"),document.querySelector(".popup_type_confirm-delete")),r=document.querySelector(".popup_type_update-avatar");function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n,r,o){var i=t.name,a=t.link,u=t.owner,c=t._id,s=t.likes,l=n.openPreviewImage,f=n.handleCardDislike,p=n.handleCardLike,h=n.handleDeleteCard;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=i,this._image=a,this._userId=o,this._owner=u._id,this._template=document.querySelector(r),this._likeButton=".element__like-button",this._imageElement=".element__image",this._cardDelete=".element__delete-button",this._cardTitle=".element__group-title",this.likes=s,this._handleCardLike=p,this._handleCardDislike=f,this._element=this._getTempalte(),this._idElement=c,this._openPreviewImage=l,this._openPopupConfirmDelete=h,this._cardElement=this._element.querySelector(this._imageElement),this._cardLikeElement=this._element.querySelector(this._likeButton)}var t,n;return t=e,(n=[{key:"_getTempalte",value:function(){return this._template.content.children[0].cloneNode(!0)}},{key:"_setCardListeners",value:function(){var e=this;this._cardElement.addEventListener("click",(function(){return e._openPreviewImage(e._name,e._image)})),this._cardLikeElement.addEventListener("click",(function(){e._element.querySelector(e._likeButton).classList.contains("element__like-button_active")?e._removelike():e._addlike()})),this._element.querySelector(this._cardDelete).addEventListener("click",(function(){return e._deleteCard()}))}},{key:"generateCard",value:function(){var e=this;return this._setCardListeners(),this.updateLikesCounter(),this._cardElement.src=this._image,this._cardElement.alt=this._name,this._element.querySelector(this._cardTitle).textContent=this._name,this._userId!==this._owner&&this._element.querySelector(this._cardDelete).classList.add("element__delete-button_invisible"),this.likes.forEach((function(t){t._id!==e._userId||e._element.querySelector(e._likeButton).classList.toggle("element__like-button_active")})),this._element}},{key:"updateLikesCounter",value:function(){this._element.querySelector(".element__like-counter").textContent=this.likes.length}},{key:"_addlike",value:function(){this._handleCardLike(this._idElement),this._element.querySelector(this._likeButton).classList.toggle("element__like-button_active")}},{key:"_removelike",value:function(){this._handleCardDislike(this._idElement),this._element.querySelector(this._likeButton).classList.toggle("element__like-button_active")}},{key:"_deleteCard",value:function(){this._openPopupConfirmDelete(this._idElement,this._element)}}])&&o(t.prototype,n),e}();function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._form=n,this._inputList=Array.from(this._form.querySelectorAll(t.inputSelector)),this._buttonElement=this._form.querySelector(t.submitButtonSelector),this._inactiveButtonClass=t.inactiveButtonClass,this._errorClass=t.errorClass,this._inputErrorClass=t.inputErrorClass,this._errorEmptyInputMessage=t.errorEmptyInputMessage,this._errorEmptyUrlMessage=t.errorEmptyUrlMessage,this._inputUrlClass=t.inputUrlClass}var t,n;return t=e,(n=[{key:"_showInputError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));this._setDefaultError(e),e.classList.add(this._inputErrorClass),t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(e){this._form.querySelector("#".concat(e.id,"-error")).classList.remove(this._errorClass),e.classList.remove(this._inputErrorClass)}},{key:"_isValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._toggleButtonState(),e._isValid(t)}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"clearValidationInput",value:function(){var e=this;this._inputList.forEach((function(t){return e._hideInputError(t)})),this._toggleButtonState()}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.setAttribute("disabled",!0),this._buttonElement.classList.add(this._inactiveButtonClass)):(this._buttonElement.removeAttribute("disabled"),this._buttonElement.classList.remove(this._inactiveButtonClass))}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_setDefaultError",value:function(e){var t=this._form.querySelector("#".concat(e.id,"-error"));e.classList.contains(this._inputUrlClass)?t.textContent=this._errorEmptyUrlMessage:!e.value.length<=0?t.textContent=e.validationMessage:t.textContent=this._errorEmptyInputMessage}}])&&a(t.prototype,n),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var s=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._container=document.querySelector(n),this._renderer=r}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}},{key:"addItem",value:function(e,t){this._container[t](e)}}])&&c(t.prototype,n),e}();function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t){var n,r,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r=function(e){"Escape"===e.key&&o.close()},(n="_closePopupPressEsc")in this?Object.defineProperty(this,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):this[n]=r,this._popup=t,this._buttonStatus=this._popup.querySelector(".form__save-button")}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._closePopupPressEsc)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._closePopupPressEsc)}},{key:"changeButtonStatus",value:function(e){this._buttonStatus.textContent=e?this._loadingLabelTrue:this._loadingLabelFalse}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){t.target.classList.contains("popup_opened")&&e.close(),t.target.classList.contains("popup__close-button")&&e.close()}))}}])&&l(t.prototype,n),e}();function p(e){return(p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function d(e,t,n){return(d="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=m(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function _(e,t){return(_=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function y(e,t){return!t||"object"!==p(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function m(e){return(m=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var v=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=m(r);if(o){var n=m(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._photo=t._popup.querySelector(".popup-open-photo__image"),t._title=t._popup.querySelector(".popup-open-photo__caption"),t}return t=a,(n=[{key:"open",value:function(e){var t=e.name,n=e.link;this._photo.src=n,this._photo.alt=t,this._title.textContent=t,d(m(a.prototype),"open",this).call(this)}}])&&h(t.prototype,n),a}(f);function b(e){return(b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(e,t,n){return(k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function S(e,t){return(S=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function E(e,t){return!t||"object"!==b(t)&&"function"!=typeof t?w(e):t}function w(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function P(e){return(P=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function C(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&S(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=P(r);if(o){var n=P(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return E(this,e)});function a(e,t){var n,r=t.handlerSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),C(w(n=i.call(this,e)),"_loadingLabelTrue","Сохранение..."),C(w(n),"_loadingLabelFalse","Сохранить"),n._submitForm=r,n._form=n._popup.querySelector(".form"),n._inputs=n._form.querySelectorAll(".form__input"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._values={},this._inputs.forEach((function(t){return e._values[t.name]=t.value})),this._values}},{key:"setEventListeners",value:function(){var e=this;k(P(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._submitForm(e._getInputValues())}))}},{key:"close",value:function(){k(P(a.prototype),"close",this).call(this),this._form.reset()}}])&&g(t.prototype,n),a}(f);function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var q=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=t,this._about=n,this._avatar=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent,id:this._id,avatar:this._avatar}}},{key:"setUserInfo",value:function(e,t,n,r){e&&(this._name.textContent=e),t&&(this._about.textContent=t),n&&(this._id=n),r&&(this._avatar.src=r)}},{key:"setUserAvatar",value:function(e){e&&(this._avatar.src=e)}},{key:"getUserId",value:function(){return this._id}}])&&O(t.prototype,n),e}();function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t){var n=t.address,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._address=n,this._headers=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return fetch("".concat(this._address,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._address,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"editUserData",value:function(e,t){return fetch("".concat(this._address,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}},{key:"addCard",value:function(e,t){return fetch("".concat(this._address,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._checkResponse)}},{key:"cardDelete",value:function(e){return fetch("".concat(this._address,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"setLike",value:function(e){return fetch("".concat(this._address,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._address,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"updateAvatar",value:function(e){return console.log(e),fetch("".concat(this._address,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}},{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}}])&&I(t.prototype,n),e}();function B(e){return(B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function T(e,t,n){return(T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}})(e,t,n||e)}function D(e,t){return(D=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function U(e,t){return!t||"object"!==B(t)&&"function"!=typeof t?x(e):t}function x(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function A(e){return(A=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function V(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&D(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(r);if(o){var n=A(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return U(this,e)});function a(e,t){var n,r=t.submitHandler;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),V(x(n=i.call(this,e)),"_loadingLabelTrue","Удаление..."),V(x(n),"_loadingLabelFalse","Да"),n._submitHandler=r,n._buttonStatus=n._popup.querySelector(".form__save-button_type_confirm-delete"),n}return t=a,(n=[{key:"open",value:function(e,t){T(A(a.prototype),"open",this).call(this),this._cardId=e,this.cardElement=t}},{key:"setEventListeners",value:function(){var e=this;T(A(a.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){t.preventDefault(),e._submitHandler(e._cardId)}))}}])&&R(t.prototype,n),a}(f);function F(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var H=new u(t,e.formProfileEdit);H.enableValidation();var N=new u(t,e.formAddFoto);N.enableValidation();var J=new u(t,r);J.enableValidation();var z=new q(document.querySelector(".profile__title"),document.querySelector(".profile__text"),document.querySelector(".profile__avatar")),$=new v(e.previewImagePopup),G=new L(e.profileEditorPopup,{handlerSubmit:function(e){G.changeButtonStatus(!0),Z.editUserData(e.name,e.job).then((function(e){z.setUserInfo(e.name,e.about),G.close()})).catch((function(e){console.log(e)})).finally((function(){G.changeButtonStatus(!1)}))}}),K=new L(e.newPlacePopup,{handlerSubmit:function(e){K.changeButtonStatus(!0),Z.addCard(e.title,e.link).then((function(e){var t=Y(e);X.addItem(t,"prepend"),K.close()})).catch((function(e){console.log(e)})).finally((function(){K.changeButtonStatus(!1)}))}}),Q=new L(r,{handlerSubmit:function(e){var t=e.link;Q.changeButtonStatus(!0),Z.updateAvatar(t).then((function(e){var t=e.avatar;z.setUserAvatar(t),Q.close()})).catch((function(e){console.log(e)})).finally((function(){Q.changeButtonStatus(!1)}))}}),W=new M(n,{submitHandler:function(e){W.changeButtonStatus(!0),Z.cardDelete(e).then((function(e){W.cardElement.remove(),W.close()})).catch((function(e){console.log(e)})).finally((function(){W.changeButtonStatus(!1)}))}}),X=new s({renderer:function(e){var t=Y(e);X.addItem(t,"append")}},".element");function Y(e){var t=z.getUserId(),n=new i(e,{openPreviewImage:function(e,t){$.open({name:e,link:t})},handleDeleteCard:function(e,t){W.open(e,t)},handleCardLike:function(e){Z.setLike(e).then((function(e){var t=e.likes;n.likes=t,n.updateLikesCounter()})).catch((function(e){console.log(e)}))},handleCardDislike:function(e){Z.removeLike(e).then((function(e){var t=e.likes;n.likes=t,n.updateLikesCounter()})).catch((function(e){console.log(e)}))}},".element-template",t);return n.generateCard()}var Z=new j({address:"https://mesto.nomoreparties.co/v1/cohort-26",headers:{authorization:"d7ba4792-c046-407e-bd03-0f3f72508d52","Content-Type":"application/json"}});Promise.all([Z.getUserInfo(),Z.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,u=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){u=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(u)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return F(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?F(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];z.setUserInfo(o.name,o.about,o._id,o.avatar),X.renderer(i)})).catch((function(e){return console.log(e)})),e.openProfilePopupButton.addEventListener("click",(function(){var t=z.getUserInfo();e.nameInput.value=t.name,e.jobInput.value=t.about,H.clearValidationInput(),G.open()})),e.addPlaceButton.addEventListener("click",(function(){N.clearValidationInput(),K.open()})),e.avatarEditingButton.addEventListener("click",(function(){J.clearValidationInput(),Q.open()})),G.setEventListeners(),K.setEventListeners(),$.setEventListeners(),W.setEventListeners(),Q.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,